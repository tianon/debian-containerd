From: Shengjing Zhu <zhushengjing@cambricon.com>
Date: Mon, 21 Feb 2022 00:50:59 +0800
Subject: Revert "Use insecure.NewCredentials instead of grpc.WithInsecure"

This reverts commit 2ee3ce510cf26d5eb400fac118aeeec5c20ed83f.

Need golang-google-grpc-dev v1.34.0

Forwarded: not-needed
---
 client.go                            | 3 +--
 cmd/containerd/command/publish.go    | 3 +--
 integration/main_test.go             | 6 +-----
 integration/remote/remote_image.go   | 7 +------
 integration/remote/remote_runtime.go | 7 +------
 services/server/server.go            | 3 +--
 6 files changed, 6 insertions(+), 23 deletions(-)

--- a/client.go
+++ b/client.go
@@ -67,7 +67,6 @@
 	"golang.org/x/sync/semaphore"
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/backoff"
-	"google.golang.org/grpc/credentials/insecure"
 	"google.golang.org/grpc/health/grpc_health_v1"
 )
 
@@ -121,7 +120,7 @@
 		}
 		gopts := []grpc.DialOption{
 			grpc.WithBlock(),
-			grpc.WithTransportCredentials(insecure.NewCredentials()),
+			grpc.WithInsecure(),
 			grpc.FailOnNonTempDialError(true),
 			grpc.WithConnectParams(connParams),
 			grpc.WithContextDialer(dialer.ContextDialer),
--- a/cmd/containerd/command/publish.go
+++ b/cmd/containerd/command/publish.go
@@ -33,7 +33,6 @@
 	"github.com/urfave/cli"
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/backoff"
-	"google.golang.org/grpc/credentials/insecure"
 )
 
 var publishCommand = cli.Command{
@@ -101,7 +100,7 @@
 	}
 	gopts := []grpc.DialOption{
 		grpc.WithBlock(),
-		grpc.WithTransportCredentials(insecure.NewCredentials()),
+		grpc.WithInsecure(),
 		grpc.WithContextDialer(d),
 		grpc.FailOnNonTempDialError(true),
 		grpc.WithConnectParams(connParams),
--- a/integration/main_test.go
+++ b/integration/main_test.go
@@ -49,7 +49,6 @@
 	"github.com/stretchr/testify/require"
 	exec "golang.org/x/sys/execabs"
 	"google.golang.org/grpc"
-	"google.golang.org/grpc/credentials/insecure"
 	runtime "k8s.io/cri-api/pkg/apis/runtime/v1"
 )
 
@@ -632,10 +631,7 @@
 	}
 	ctx, cancel := context.WithTimeout(context.Background(), timeout)
 	defer cancel()
-	conn, err := grpc.DialContext(ctx, addr,
-		grpc.WithTransportCredentials(insecure.NewCredentials()),
-		grpc.WithContextDialer(dialer),
-	)
+	conn, err := grpc.DialContext(ctx, addr, grpc.WithInsecure(), grpc.WithContextDialer(dialer))
 	if err != nil {
 		return nil, fmt.Errorf("failed to connect cri endpoint: %w", err)
 	}
--- a/integration/remote/remote_image.go
+++ b/integration/remote/remote_image.go
@@ -39,7 +39,6 @@
 	"time"
 
 	"google.golang.org/grpc"
-	"google.golang.org/grpc/credentials/insecure"
 	"k8s.io/klog/v2"
 
 	internalapi "github.com/containerd/containerd/integration/cri-api/pkg/apis"
@@ -65,11 +64,7 @@
 	ctx, cancel := context.WithTimeout(context.Background(), connectionTimeout)
 	defer cancel()
 
-	conn, err := grpc.DialContext(ctx, addr,
-		grpc.WithTransportCredentials(insecure.NewCredentials()),
-		grpc.WithContextDialer(dialer),
-		grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(maxMsgSize)),
-	)
+	conn, err := grpc.DialContext(ctx, addr, grpc.WithInsecure(), grpc.WithContextDialer(dialer), grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(maxMsgSize)))
 	if err != nil {
 		klog.Errorf("Connect remote image service %s failed: %v", addr, err)
 		return nil, err
--- a/integration/remote/remote_runtime.go
+++ b/integration/remote/remote_runtime.go
@@ -40,7 +40,6 @@
 	"time"
 
 	"google.golang.org/grpc"
-	"google.golang.org/grpc/credentials/insecure"
 	"k8s.io/klog/v2"
 
 	internalapi "github.com/containerd/containerd/integration/cri-api/pkg/apis"
@@ -74,11 +73,7 @@
 	ctx, cancel := context.WithTimeout(context.Background(), connectionTimeout)
 	defer cancel()
 
-	conn, err := grpc.DialContext(ctx, addr,
-		grpc.WithTransportCredentials(insecure.NewCredentials()),
-		grpc.WithContextDialer(dialer),
-		grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(maxMsgSize)),
-	)
+	conn, err := grpc.DialContext(ctx, addr, grpc.WithInsecure(), grpc.WithContextDialer(dialer), grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(maxMsgSize)))
 	if err != nil {
 		klog.Errorf("Connect remote runtime %s failed: %v", addr, err)
 		return nil, err
--- a/services/server/server.go
+++ b/services/server/server.go
@@ -55,7 +55,6 @@
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/backoff"
 	"google.golang.org/grpc/credentials"
-	"google.golang.org/grpc/credentials/insecure"
 )
 
 // CreateTopLevelDirectories creates the top-level root and state directories.
@@ -473,7 +472,7 @@
 		Backoff: backoffConfig,
 	}
 	gopts := []grpc.DialOption{
-		grpc.WithTransportCredentials(insecure.NewCredentials()),
+		grpc.WithInsecure(),
 		grpc.WithConnectParams(connParams),
 		grpc.WithContextDialer(dialer.ContextDialer),
 
